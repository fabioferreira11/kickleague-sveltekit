import { c as create_ssr_component, f as createEventDispatcher, b as each, e as escape, d as add_attribute, o as onDestroy, v as validate_component, n as null_to_empty } from "../../../chunks/ssr.js";
/* empty css                     */
import { H as Header, M as MenuBurger } from "../../../chunks/MenuBurger.js";
import { B as Button } from "../../../chunks/button.js";
const css$1 = {
  code: ".choix-joueur.svelte-nfojbp.svelte-nfojbp{width:20%;margin:2vh auto;display:flex;flex-direction:column;justify-content:center;align-items:center;cursor:pointer}.choix-joueur.selected.svelte-nfojbp.svelte-nfojbp{background-color:var(--white);padding:1vh 2vw 1vh 1vw;border-radius:20px}.joueur-img.svelte-nfojbp.svelte-nfojbp{width:50px;height:50px;border:2px solid var(--green);border-radius:10px;background-color:var(--white)}.choix-joueur-info.svelte-nfojbp.svelte-nfojbp{display:none}.moyenne-joueur.svelte-nfojbp.svelte-nfojbp{width:100%}.moyenne-joueur.svelte-nfojbp p.svelte-nfojbp{width:40px;height:40px;border:2px solid var(--green);background-color:var(--white);border-radius:10px;margin:10px auto 10px auto;display:flex;justify-content:center;align-items:center}@media(min-width: 768px){.choix-joueur.svelte-nfojbp.svelte-nfojbp{width:90%;margin:1vh 0;display:flex;flex-direction:row}.choix-joueur-info.svelte-nfojbp.svelte-nfojbp{width:60%;display:block}.choix-joueur-info.svelte-nfojbp p.svelte-nfojbp{margin:2px}.moyenne-joueur.svelte-nfojbp.svelte-nfojbp{width:20%}.moyenne-joueur.svelte-nfojbp p.svelte-nfojbp{width:55px;height:55px;margin:auto}}",
  map: `{"version":3,"file":"choix-joueur.svelte","sources":["choix-joueur.svelte"],"sourcesContent":["<script>\\r\\n    import { createEventDispatcher, onMount } from 'svelte';\\r\\n    \\r\\n    // Propriétés exportées permettant de passer des données au composant\\r\\n    export let activePosition;\\r\\n    export let selectedPlayer;\\r\\n    export let selectedPlayersList = []; // Liste de tous les joueurs sélectionnés\\r\\n\\r\\n    let players = [];\\r\\n    const dispatch = createEventDispatcher(); // Crée un dispatcher d'événements pour communiquer avec d'autres composants\\r\\n\\r\\n    // Mappage des positions avec leurs noms en anglais\\r\\n    const positionMapping = {\\r\\n        5: 'Goalkeeper',\\r\\n        4: 'Defender',\\r\\n        3: 'Midfielder',\\r\\n        2: 'Attacker',\\r\\n        1: 'Tous' // \\"Tous\\" signifie tous les joueurs, indépendamment de leur position\\r\\n    };\\r\\n\\r\\n    // Traduction des noms de positions en français\\r\\n    const positionTranslation = {\\r\\n        'Goalkeeper': 'Gardien',\\r\\n        'Defender': 'Défenseur',\\r\\n        'Midfielder': 'Milieu',\\r\\n        'Attacker': 'Attaquant'\\r\\n    };\\r\\n\\r\\n    // Fonction pour charger les joueurs en fonction de la position active\\r\\n    async function loadPlayers() {\\r\\n        const position = positionMapping[activePosition];\\r\\n        if (position) {\\r\\n            try {\\r\\n                const response = await fetch(\`/api/getPlayersCompo?position=\${position}\`);\\r\\n                const data = await response.json();\\r\\n\\r\\n                if (data && Array.isArray(data.players)) {\\r\\n                    // Filtrer les joueurs si la position est \\"Tous\\", en excluant ceux déjà sélectionnés\\r\\n                    players = position === 'Tous'\\r\\n                        ? data.players.filter(player => !selectedPlayersList.some(selected => selected?.id === player.id))\\r\\n                        : data.players;\\r\\n                } else {\\r\\n                    console.error(\\"Invalid data format:\\", data);\\r\\n                    players = [];\\r\\n                }\\r\\n            } catch (error) {\\r\\n                console.error(\\"Failed to load players:\\", error);\\r\\n                players = [];\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Charge les joueurs au montage du composant\\r\\n    onMount(() => {\\r\\n        loadPlayers();\\r\\n    });\\r\\n\\r\\n    // Recharge les joueurs chaque fois que la position active change\\r\\n    $: if (activePosition && typeof window !== 'undefined') {\\r\\n        loadPlayers();\\r\\n    }\\r\\n\\r\\n    // Fonction pour sélectionner un joueur et émettre un événement\\r\\n    function selectPlayer(player) {\\r\\n        if (selectedPlayersList.some(selected => selected?.id === player.id && selected !== selectedPlayer)) {\\r\\n            return;\\r\\n        }\\r\\n        dispatch('playerSelect', player); // Émet un événement 'playerSelect' avec le joueur sélectionné\\r\\n    }\\r\\n<\/script>\\r\\n\\r\\n<!-- Affichage de chaque joueur dans la liste, avec un style différent si le joueur est sélectionné -->\\r\\n{#each players as player (player.id)}\\r\\n<div class=\\"choix-joueur {selectedPlayer?.id === player.id ? 'selected' : ''}\\" on:click={() => selectPlayer(player)}>\\r\\n    <div class=\\"joueur-img\\">\\r\\n        <img src={player.photo_url} alt={\`Photo de \${player.nom}\`} style=\\"width: 100%; height: 100%; object-fit: cover; border-radius: 10px;\\" />\\r\\n    </div>\\r\\n    <div class=\\"choix-joueur-info\\">\\r\\n        <p>{player.nom}</p>\\r\\n        <p>{positionTranslation[player.position] || player.position}</p> \\r\\n        <p>{player.club}</p>\\r\\n    </div>\\r\\n    <div class=\\"moyenne-joueur\\">\\r\\n        <p>{player.moyenne || '30'}</p>\\r\\n    </div>\\r\\n</div>\\r\\n{/each}\\r\\n\\r\\n<style>\\r\\n.choix-joueur {\\r\\n    width: 20%;\\r\\n    margin: 2vh auto;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.choix-joueur.selected {\\r\\n    background-color: var(--white);\\r\\n    padding: 1vh 2vw 1vh 1vw;\\r\\n    border-radius: 20px;\\r\\n}\\r\\n\\r\\n.joueur-img {\\r\\n    width: 50px;\\r\\n    height: 50px;\\r\\n    border: 2px solid var(--green);\\r\\n    border-radius: 10px;\\r\\n    background-color: var(--white);\\r\\n}\\r\\n\\r\\n.choix-joueur-info {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.moyenne-joueur {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.moyenne-joueur p {\\r\\n    width: 40px;\\r\\n    height: 40px;\\r\\n    border: 2px solid var(--green);\\r\\n    background-color: var(--white);\\r\\n    border-radius: 10px;\\r\\n    margin: 10px auto 10px auto;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n    .choix-joueur {\\r\\n        width: 90%;\\r\\n        margin: 1vh 0;\\r\\n        display: flex;\\r\\n        flex-direction: row;\\r\\n    }\\r\\n\\r\\n    .choix-joueur-info {\\r\\n        width: 60%;\\r\\n        display: block; \\r\\n    }\\r\\n\\r\\n    .choix-joueur-info p {\\r\\n        margin: 2px;\\r\\n    }\\r\\n\\r\\n    .moyenne-joueur {\\r\\n        width: 20%;\\r\\n    }\\r\\n\\r\\n    .moyenne-joueur p {\\r\\n        width: 55px;\\r\\n        height: 55px;\\r\\n        margin: auto;\\r\\n    }\\r\\n}\\r\\n</style>"],"names":[],"mappings":"AAyFA,yCAAc,CACV,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,CAAC,IAAI,CAChB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,OACZ,CAEA,aAAa,qCAAU,CACnB,gBAAgB,CAAE,IAAI,OAAO,CAAC,CAC9B,OAAO,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CACxB,aAAa,CAAE,IACnB,CAEA,uCAAY,CACR,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,CAC9B,aAAa,CAAE,IAAI,CACnB,gBAAgB,CAAE,IAAI,OAAO,CACjC,CAEA,8CAAmB,CACf,OAAO,CAAE,IACb,CAEA,2CAAgB,CACZ,KAAK,CAAE,IACX,CAEA,6BAAe,CAAC,eAAE,CACd,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,CAC9B,gBAAgB,CAAE,IAAI,OAAO,CAAC,CAC9B,aAAa,CAAE,IAAI,CACnB,MAAM,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAC3B,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MACjB,CAEA,MAAO,YAAY,KAAK,CAAE,CACtB,yCAAc,CACV,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,CAAC,CAAC,CACb,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GACpB,CAEA,8CAAmB,CACf,KAAK,CAAE,GAAG,CACV,OAAO,CAAE,KACb,CAEA,gCAAkB,CAAC,eAAE,CACjB,MAAM,CAAE,GACZ,CAEA,2CAAgB,CACZ,KAAK,CAAE,GACX,CAEA,6BAAe,CAAC,eAAE,CACd,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,IACZ,CACJ"}`
};
const Choix_joueur = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { activePosition } = $$props;
  let { selectedPlayer } = $$props;
  let { selectedPlayersList = [] } = $$props;
  let players = [];
  createEventDispatcher();
  const positionMapping = {
    5: "Goalkeeper",
    4: "Defender",
    3: "Midfielder",
    2: "Attacker",
    1: "Tous"
    // "Tous" signifie tous les joueurs, indépendamment de leur position
  };
  const positionTranslation = {
    "Goalkeeper": "Gardien",
    "Defender": "Défenseur",
    "Midfielder": "Milieu",
    "Attacker": "Attaquant"
  };
  async function loadPlayers() {
    const position = positionMapping[activePosition];
    if (position) {
      try {
        const response = await fetch(`/api/getPlayersCompo?position=${position}`);
        const data = await response.json();
        if (data && Array.isArray(data.players)) {
          players = position === "Tous" ? data.players.filter((player) => !selectedPlayersList.some((selected) => selected?.id === player.id)) : data.players;
        } else {
          console.error("Invalid data format:", data);
          players = [];
        }
      } catch (error) {
        console.error("Failed to load players:", error);
        players = [];
      }
    }
  }
  if ($$props.activePosition === void 0 && $$bindings.activePosition && activePosition !== void 0) $$bindings.activePosition(activePosition);
  if ($$props.selectedPlayer === void 0 && $$bindings.selectedPlayer && selectedPlayer !== void 0) $$bindings.selectedPlayer(selectedPlayer);
  if ($$props.selectedPlayersList === void 0 && $$bindings.selectedPlayersList && selectedPlayersList !== void 0) $$bindings.selectedPlayersList(selectedPlayersList);
  $$result.css.add(css$1);
  {
    if (activePosition && typeof window !== "undefined") {
      loadPlayers();
    }
  }
  return ` ${each(players, (player) => {
    return `<div class="${"choix-joueur " + escape(selectedPlayer?.id === player.id ? "selected" : "", true) + " svelte-nfojbp"}"><div class="joueur-img svelte-nfojbp"><img${add_attribute("src", player.photo_url, 0)}${add_attribute("alt", `Photo de ${player.nom}`, 0)} style="width: 100%; height: 100%; object-fit: cover; border-radius: 10px;"></div> <div class="choix-joueur-info svelte-nfojbp"><p class="svelte-nfojbp">${escape(player.nom)}</p> <p class="svelte-nfojbp">${escape(positionTranslation[player.position] || player.position)}</p> <p class="svelte-nfojbp">${escape(player.club)}</p></div> <div class="moyenne-joueur svelte-nfojbp"><p class="svelte-nfojbp">${escape(player.moyenne || "30")}</p></div> </div>`;
  })}`;
});
const css = {
  code: ".compo.svelte-1pjpb7f.svelte-1pjpb7f{width:100%;display:flex;flex-direction:column}.terrain.svelte-1pjpb7f.svelte-1pjpb7f{width:94vw;height:70vh;margin:1vh auto;background-color:#197F3C;background-image:url(/img/terrain.png);background-position:center;background-repeat:no-repeat;background-size:cover;border-radius:20px;display:flex;flex-direction:column;justify-content:center;align-items:center}.position.svelte-1pjpb7f.svelte-1pjpb7f{width:80%;height:30%;display:flex;justify-content:space-between;align-items:flex-start}.emplacement-position.svelte-1pjpb7f.svelte-1pjpb7f{width:35%;height:20vh;background-color:var(--gris);border:2px solid var(--black);border-radius:20px;display:flex;justify-content:center;align-items:center;padding:0}.emplacement-position2.svelte-1pjpb7f.svelte-1pjpb7f{width:28%;height:20vh;background-color:var(--gris);border:2px solid var(--black);border-radius:20px;display:flex;justify-content:center;align-items:center;padding:0}.emplacement-position.svelte-1pjpb7f img.svelte-1pjpb7f,.emplacement-position2.svelte-1pjpb7f img.svelte-1pjpb7f{width:10%}.joueur-info.svelte-1pjpb7f.svelte-1pjpb7f{width:100%;background-color:var(--white);height:100%;text-align:center;border-radius:20px}.joueur-info.svelte-1pjpb7f img.svelte-1pjpb7f{width:100%;border-radius:20px 20px 0 0}.joueur-info.svelte-1pjpb7f p.svelte-1pjpb7f{margin:5px 0}.option.svelte-1pjpb7f.svelte-1pjpb7f{width:94vw;margin:auto;background-color:var(--gris);border-radius:20px}.option-joueur.svelte-1pjpb7f.svelte-1pjpb7f{display:flex;gap:10px;margin-inline:2%;overflow-y:none;overflow-x:auto}.active.svelte-1pjpb7f.svelte-1pjpb7f{background-color:var(--greencompo)}.button.svelte-1pjpb7f.svelte-1pjpb7f{display:flex;justify-content:center;margin-bottom:3vh}@media(min-width: 768px){.compo.svelte-1pjpb7f.svelte-1pjpb7f{display:flex;flex-direction:row;padding:2vh 3vw}.terrain.svelte-1pjpb7f.svelte-1pjpb7f{width:75%;height:85vh;margin-top:0;background-size:contain}.position.svelte-1pjpb7f.svelte-1pjpb7f{width:50%;display:flex;justify-content:space-evenly;padding:0}.milieuterrain.svelte-1pjpb7f.svelte-1pjpb7f{justify-content:space-between;margin-top:4vh}.emplacement-position.svelte-1pjpb7f.svelte-1pjpb7f{width:26%;height:28vh}.emplacement-position2.svelte-1pjpb7f.svelte-1pjpb7f{width:13%;height:28vh;margin-top:-6vh}.option.svelte-1pjpb7f.svelte-1pjpb7f{width:25%;height:85vh;margin-left:1vw;padding:10px;display:flex;flex-direction:column}.option-joueur.svelte-1pjpb7f.svelte-1pjpb7f{display:flex;flex-direction:column;overflow-y:auto}}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\r\\n    import '../../styles/global.css';  // Importation des styles globaux\\r\\n    import { onMount, onDestroy } from 'svelte';  // Importation des hooks de cycle de vie de Svelte\\r\\n    import Header from '$lib/header.svelte';  // Importation du composant Header\\r\\n    import Button from '$lib/button.svelte';  // Importation du composant Button\\r\\n    import Choixjoueur from '$lib/choix-joueur.svelte';  // Importation du composant ChoixJoueur\\r\\n    import MenuBurger from '$lib/MenuBurger.svelte';  // Importation du composant MenuBurger pour les mobiles\\r\\n\\r\\n    // Variables pour gérer l'état de la page et la sélection des joueurs\\r\\n    let isMobile = false;\\r\\n    let activePosition = 5;\\r\\n    let userId = null;\\r\\n\\r\\n    let selectedPlayers = {\\r\\n        1: null, // Position \\"Tous\\"\\r\\n        2: null, // Position \\"Attaquant\\"\\r\\n        3: null, // Position \\"Milieu\\"\\r\\n        4: null, // Position \\"Défenseur\\"\\r\\n        5: null  // Position \\"Gardien\\"\\r\\n    };\\r\\n\\r\\n    // Variables dérivées pour la liste des joueurs sélectionnés et l'état des positions remplies\\r\\n    $: selectedPlayersList = Object.values(selectedPlayers).filter(player => player !== null);\\r\\n    $: allPositionsFilled = Object.values(selectedPlayers).every(player => player !== null);\\r\\n\\r\\n    const positionTranslation = {\\r\\n        'Goalkeeper': 'Gardien',\\r\\n        'Defender': 'Défenseur',\\r\\n        'Midfielder': 'Milieu',\\r\\n        'Attacker': 'Attaquant'\\r\\n    };\\r\\n\\r\\n    // Vérifie la taille de l'écran pour déterminer si l'appareil est mobile\\r\\n    function checkScreenSize() {\\r\\n        if (typeof window !== 'undefined') {\\r\\n            isMobile = window.innerWidth <= 768;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Récupère les joueurs de l'utilisateur via une requête API\\r\\n    async function fetchUserPlayers() {\\r\\n        try {\\r\\n            const response = await fetch('/api/getPlayersCompo?position=Tous');\\r\\n            if (response.ok) {\\r\\n                const data = await response.json();\\r\\n                userId = data.userId;\\r\\n\\r\\n                // Sauvegarde l'ID utilisateur dans le localStorage pour une utilisation ultérieure\\r\\n                if (userId) {\\r\\n                    localStorage.setItem('userSession', JSON.stringify({ userId }));\\r\\n                }\\r\\n\\r\\n                return data.players;\\r\\n            } else {\\r\\n                console.error('Failed to fetch players');\\r\\n            }\\r\\n        } catch (error) {\\r\\n            console.error('Error fetching players:', error);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Met à jour la position active sélectionnée\\r\\n    function setActive(position) {\\r\\n        activePosition = position;\\r\\n    }\\r\\n\\r\\n    // Sauvegarde la composition actuelle des joueurs sélectionnés dans le localStorage\\r\\n    function saveComposition() {\\r\\n        if (typeof window !== 'undefined' && userId !== null && userId !== undefined) {\\r\\n            const selectedPlayerIds = Object.keys(selectedPlayers).reduce((acc, key) => {\\r\\n                if (selectedPlayers[key]) {\\r\\n                    acc[key] = { id: selectedPlayers[key].id };\\r\\n                }\\r\\n                return acc;\\r\\n            }, {});\\r\\n\\r\\n            localStorage.setItem('userSession', JSON.stringify({ userId }));\\r\\n            const compositions = JSON.parse(localStorage.getItem('userCompositions') || '{}');\\r\\n            compositions[userId] = selectedPlayerIds;\\r\\n            localStorage.setItem('userCompositions', JSON.stringify(compositions));\\r\\n        } else {\\r\\n            console.error(\\"No valid userId found to save the composition.\\");\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Gère la sélection d'un joueur dans la composition\\r\\n    function handlePlayerSelect(event) {\\r\\n        const player = event.detail;\\r\\n        selectedPlayers[activePosition] = player;\\r\\n        selectedPlayersList = Object.values(selectedPlayers).filter(player => player !== null); // Mise à jour de la liste des joueurs sélectionnés\\r\\n        saveComposition();  // Sauvegarde de la composition mise à jour\\r\\n    }\\r\\n\\r\\n    // Charge la composition des joueurs à partir du localStorage\\r\\n    async function loadComposition() {\\r\\n        if (typeof window !== 'undefined' && userId) {\\r\\n            const compositions = JSON.parse(localStorage.getItem('userCompositions') || '{}');\\r\\n            if (compositions[userId]) {\\r\\n                const savedPlayerIds = compositions[userId];\\r\\n                const allPlayers = await fetchUserPlayers();  // Récupère tous les joueurs pour cet utilisateur\\r\\n\\r\\n                const loadedPlayers = {};\\r\\n                for (const position in savedPlayerIds) {\\r\\n                    const playerId = savedPlayerIds[position].id;\\r\\n                    const playerDetails = allPlayers.find(player => player.id === playerId);\\r\\n                    if (playerDetails) {\\r\\n                        loadedPlayers[position] = playerDetails;\\r\\n                    }\\r\\n                }\\r\\n\\r\\n                selectedPlayers = loadedPlayers;\\r\\n                selectedPlayersList = Object.values(selectedPlayers).filter(player => player !== null);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Exécution au montage du composant\\r\\n    onMount(async () => {\\r\\n        await fetchUserPlayers();  // Récupère les joueurs de l'utilisateur\\r\\n        if (userId) {\\r\\n            await loadComposition();  // Charge la composition des joueurs si un userId est trouvé\\r\\n        } else {\\r\\n            console.error(\\"User ID not found\\");\\r\\n        }\\r\\n        if (typeof window !== 'undefined') {\\r\\n            checkScreenSize();  // Vérifie la taille de l'écran\\r\\n            window.addEventListener('resize', checkScreenSize);  // Ajoute un écouteur pour gérer le redimensionnement de la fenêtre\\r\\n        }\\r\\n    });\\r\\n\\r\\n    // Nettoyage au démontage du composant\\r\\n    onDestroy(() => {\\r\\n        if (typeof window !== 'undefined') {\\r\\n            window.removeEventListener('resize', checkScreenSize);\\r\\n        }\\r\\n    });\\r\\n<\/script>\\r\\n\\r\\n{#if isMobile}\\r\\n    <MenuBurger />\\r\\n{:else}\\r\\n    <Header style=\\"margin-top: 2vh;\\"/>\\r\\n{/if}\\r\\n\\r\\n<section class=\\"compo\\">\\r\\n    <section class=\\"terrain\\">\\r\\n        <div class=\\"position\\">\\r\\n            <button class={activePosition === 1 ? \\"emplacement-position active\\" : \\"emplacement-position\\"}\\r\\n                 on:click={() => setActive(1)}>\\r\\n                {#if selectedPlayers[1]}\\r\\n                    <div class=\\"joueur-info\\">\\r\\n                        <img src={selectedPlayers[1].photo_url} alt={\`Photo de \${selectedPlayers[1].nom}\`} class=\\"joueur-photo\\"/>\\r\\n                        <p>{selectedPlayers[1].nom}</p>\\r\\n                        <p>{positionTranslation[selectedPlayers[1].position] || selectedPlayers[1].position}</p>\\r\\n                    </div>\\r\\n                {:else}\\r\\n                    <img src=\\"/img/plus.png\\" alt=\\"icone plus\\">\\r\\n                {/if}\\r\\n            </button>\\r\\n            <button class={activePosition === 2 ? \\"emplacement-position active\\" : \\"emplacement-position\\"}\\r\\n                 on:click={() => setActive(2)}>\\r\\n                {#if selectedPlayers[2]}\\r\\n                    <div class=\\"joueur-info\\">\\r\\n                        <img src={selectedPlayers[2].photo_url} alt={\`Photo de \${selectedPlayers[2].nom}\`} class=\\"joueur-photo\\"/>\\r\\n                        <p>{selectedPlayers[2].nom}</p>\\r\\n                        <p>{positionTranslation[selectedPlayers[2].position] || selectedPlayers[2].position}</p>\\r\\n                    </div>\\r\\n                {:else}\\r\\n                    <img src=\\"/img/plus.png\\" alt=\\"icone plus\\">\\r\\n                {/if}\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\"position milieuterrain\\">\\r\\n            <button class={activePosition === 3 ? \\"emplacement-position active\\" : \\"emplacement-position\\"}\\r\\n                 on:click={() => setActive(3)}>\\r\\n                {#if selectedPlayers[3]}\\r\\n                    <div class=\\"joueur-info\\">\\r\\n                        <img src={selectedPlayers[3].photo_url} alt={\`Photo de \${selectedPlayers[3].nom}\`} class=\\"joueur-photo\\"/>\\r\\n                        <p>{selectedPlayers[3].nom}</p>\\r\\n                        <p>{positionTranslation[selectedPlayers[3].position] || selectedPlayers[3].position}</p>\\r\\n                    </div>\\r\\n                {:else}\\r\\n                    <img src=\\"/img/plus.png\\" alt=\\"icone plus\\">\\r\\n                {/if}\\r\\n            </button>\\r\\n            <button class={activePosition === 4 ? \\"emplacement-position active\\" : \\"emplacement-position\\"}\\r\\n                 on:click={() => setActive(4)}>\\r\\n                {#if selectedPlayers[4]}\\r\\n                    <div class=\\"joueur-info\\">\\r\\n                        <img src={selectedPlayers[4].photo_url} alt={\`Photo de \${selectedPlayers[4].nom}\`} class=\\"joueur-photo\\"/>\\r\\n                        <p>{selectedPlayers[4].nom}</p>\\r\\n                        <p>{positionTranslation[selectedPlayers[4].position] || selectedPlayers[4].position}</p>\\r\\n                    </div>\\r\\n                {:else}\\r\\n                    <img src=\\"/img/plus.png\\" alt=\\"icone plus\\">\\r\\n                {/if}\\r\\n            </button>\\r\\n        </div>\\r\\n        <button class={activePosition === 5 ? \\"position emplacement-position2 active\\" : \\"position emplacement-position2\\"}\\r\\n             on:click={() => setActive(5)}>\\r\\n            {#if selectedPlayers[5]}\\r\\n                <div class=\\"joueur-info\\">\\r\\n                    <img src={selectedPlayers[5].photo_url} alt={\`Photo de \${selectedPlayers[5].nom}\`} class=\\"joueur-photo\\"/>\\r\\n                    <p>{selectedPlayers[5].nom}</p>\\r\\n                    <p>{positionTranslation[selectedPlayers[5].position] || selectedPlayers[5].position}</p>\\r\\n                </div>\\r\\n            {:else}\\r\\n                <img src=\\"/img/plus.png\\" alt=\\"icone plus\\">\\r\\n            {/if}\\r\\n        </button>\\r\\n    </section>\\r\\n    <section class=\\"option\\">\\r\\n        <div class=\\"option-joueur\\">\\r\\n            <Choixjoueur {activePosition} selectedPlayer={selectedPlayers[activePosition]} selectedPlayersList={selectedPlayersList} on:playerSelect={handlePlayerSelect}/>\\r\\n        </div>\\r\\n        {#if allPositionsFilled}\\r\\n            <div class=\\"button\\">\\r\\n                <Button text=\\"valider\\" url=\\"/gameweek\\" />\\r\\n            </div>\\r\\n        {/if}\\r\\n    </section>\\r\\n</section>\\r\\n\\r\\n<style>\\r\\n    .compo {\\r\\n        width: 100%;\\r\\n        display: flex;\\r\\n        flex-direction: column;\\r\\n    }\\r\\n\\r\\n    .terrain {\\r\\n        width: 94vw;\\r\\n        height: 70vh;\\r\\n        margin: 1vh auto;\\r\\n        background-color: #197F3C;\\r\\n        background-image: url(/img/terrain.png);\\r\\n        background-position: center;\\r\\n        background-repeat: no-repeat;\\r\\n        background-size: cover;\\r\\n        border-radius: 20px;\\r\\n        display: flex;\\r\\n        flex-direction: column;\\r\\n        justify-content: center;\\r\\n        align-items: center;\\r\\n    }\\r\\n\\r\\n    .position {\\r\\n        width: 80%;\\r\\n        height: 30%;\\r\\n        display: flex;\\r\\n        justify-content: space-between;\\r\\n        align-items: flex-start;\\r\\n    }\\r\\n\\r\\n    .emplacement-position {\\r\\n        width: 35%;\\r\\n        height: 20vh;\\r\\n        background-color: var(--gris);\\r\\n        border: 2px solid var(--black);\\r\\n        border-radius: 20px;\\r\\n        display: flex;\\r\\n        justify-content: center;\\r\\n        align-items: center;\\r\\n        padding: 0;\\r\\n    }\\r\\n\\r\\n    .emplacement-position2 {\\r\\n        width: 28%;\\r\\n        height: 20vh;\\r\\n        background-color: var(--gris);\\r\\n        border: 2px solid var(--black);\\r\\n        border-radius: 20px;\\r\\n        display: flex;\\r\\n        justify-content: center;\\r\\n        align-items: center;\\r\\n        padding: 0;\\r\\n    }\\r\\n\\r\\n    .emplacement-position img,\\r\\n    .emplacement-position2 img {\\r\\n        width: 10%;\\r\\n    }\\r\\n\\r\\n    .joueur-info {\\r\\n        width: 100%;\\r\\n        background-color: var(--white);\\r\\n        height: 100%;\\r\\n        text-align: center;\\r\\n        border-radius: 20px;\\r\\n    }\\r\\n\\r\\n    .joueur-info img{\\r\\n        width: 100%;\\r\\n        border-radius: 20px 20px 0 0;\\r\\n    }\\r\\n\\r\\n    .joueur-info p{\\r\\n        margin: 5px 0;\\r\\n    }\\r\\n\\r\\n    .option {\\r\\n        width: 94vw;\\r\\n        margin: auto;\\r\\n        background-color: var(--gris);\\r\\n        border-radius: 20px;\\r\\n    }\\r\\n\\r\\n    .option-joueur {\\r\\n        display: flex;\\r\\n        gap: 10px;\\r\\n        margin-inline: 2%;\\r\\n        overflow-y: none;\\r\\n        overflow-x: auto;\\r\\n    }\\r\\n\\r\\n    .active {\\r\\n        background-color: var(--greencompo);\\r\\n    }\\r\\n\\r\\n    .button {\\r\\n        display: flex;\\r\\n        justify-content: center;\\r\\n        margin-bottom: 3vh;\\r\\n    }\\r\\n\\r\\n    @media (min-width: 768px) {\\r\\n        .compo {\\r\\n            display: flex;\\r\\n            flex-direction: row;\\r\\n            padding: 2vh 3vw;\\r\\n        }\\r\\n\\r\\n        .terrain {\\r\\n            width: 75%;\\r\\n            height: 85vh;\\r\\n            margin-top: 0;\\r\\n            background-size: contain;\\r\\n        }\\r\\n\\r\\n        .position {\\r\\n            width: 50%;\\r\\n            display: flex;\\r\\n            justify-content: space-evenly;\\r\\n            padding: 0;\\r\\n        }\\r\\n\\r\\n        .milieuterrain{\\r\\n            justify-content: space-between;\\r\\n            margin-top: 4vh;\\r\\n        }\\r\\n\\r\\n        .emplacement-position {\\r\\n            width: 26%;\\r\\n            height: 28vh;\\r\\n        }\\r\\n\\r\\n        .emplacement-position2 {\\r\\n            width: 13%;\\r\\n            height: 28vh;\\r\\n            margin-top: -6vh;\\r\\n        }\\r\\n\\r\\n        .option {\\r\\n            width: 25%;\\r\\n            height: 85vh;\\r\\n            margin-left: 1vw;\\r\\n            padding: 10px;\\r\\n            display: flex;\\r\\n            flex-direction: column;\\r\\n        }\\r\\n\\r\\n        .option-joueur {\\r\\n            display: flex;\\r\\n            flex-direction: column;\\r\\n            overflow-y: auto;\\r\\n        }\\r\\n    }\\r\\n</style>"],"names":[],"mappings":"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"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let selectedPlayersList;
  let allPositionsFilled;
  let isMobile = false;
  let activePosition = 5;
  let selectedPlayers = {
    1: null,
    // Position "Tous"
    2: null,
    // Position "Attaquant"
    3: null,
    // Position "Milieu"
    4: null,
    // Position "Défenseur"
    5: null
    // Position "Gardien"
  };
  function checkScreenSize() {
    if (typeof window !== "undefined") {
      isMobile = window.innerWidth <= 768;
    }
  }
  onDestroy(() => {
    if (typeof window !== "undefined") {
      window.removeEventListener("resize", checkScreenSize);
    }
  });
  $$result.css.add(css);
  selectedPlayersList = Object.values(selectedPlayers).filter((player) => player !== null);
  allPositionsFilled = Object.values(selectedPlayers).every((player) => player !== null);
  return `${isMobile ? `${validate_component(MenuBurger, "MenuBurger").$$render($$result, {}, {}, {})}` : `${validate_component(Header, "Header").$$render($$result, { style: "margin-top: 2vh;" }, {}, {})}`} <section class="compo svelte-1pjpb7f"><section class="terrain svelte-1pjpb7f"><div class="position svelte-1pjpb7f"><button class="${escape(
    null_to_empty("emplacement-position"),
    true
  ) + " svelte-1pjpb7f"}">${`<img src="/img/plus.png" alt="icone plus" class="svelte-1pjpb7f">`}</button> <button class="${escape(
    null_to_empty("emplacement-position"),
    true
  ) + " svelte-1pjpb7f"}">${`<img src="/img/plus.png" alt="icone plus" class="svelte-1pjpb7f">`}</button></div> <div class="position milieuterrain svelte-1pjpb7f"><button class="${escape(
    null_to_empty("emplacement-position"),
    true
  ) + " svelte-1pjpb7f"}">${`<img src="/img/plus.png" alt="icone plus" class="svelte-1pjpb7f">`}</button> <button class="${escape(
    null_to_empty("emplacement-position"),
    true
  ) + " svelte-1pjpb7f"}">${`<img src="/img/plus.png" alt="icone plus" class="svelte-1pjpb7f">`}</button></div> <button class="${escape(
    null_to_empty(
      "position emplacement-position2 active"
    ),
    true
  ) + " svelte-1pjpb7f"}">${`<img src="/img/plus.png" alt="icone plus" class="svelte-1pjpb7f">`}</button></section> <section class="option svelte-1pjpb7f"><div class="option-joueur svelte-1pjpb7f">${validate_component(Choix_joueur, "Choixjoueur").$$render(
    $$result,
    {
      activePosition,
      selectedPlayer: selectedPlayers[activePosition],
      selectedPlayersList
    },
    {},
    {}
  )}</div> ${allPositionsFilled ? `<div class="button svelte-1pjpb7f">${validate_component(Button, "Button").$$render($$result, { text: "valider", url: "/gameweek" }, {}, {})}</div>` : ``}</section> </section>`;
});
export {
  Page as default
};
